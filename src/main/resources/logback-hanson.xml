<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration 属性说明 scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 
	设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 debug: 
	当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 
	**** 俩个included的文件中定义的内容是不共享的 ***
	-->
<included>
	<contextName>${spring.application.name}</contextName>
	
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="APP_NAME" value="${spring.application.name}" />
	<property name="HANSON_LOG_HOME" value="${logging.home}/${APP_NAME}/hanson" />
	<property name="pattern" value="%date{ISO8601}\t%thread\t%level\t%logger\t%message%n"/>
	
	<!-- 控制台输出 -->
	<appender name="HANSON_STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
	</appender>
	
	<appender name="HANSON_TRACE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HANSON_LOG_HOME}/trace/${APP_NAME}.log</file>
        <!--过滤器,只打INFO级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>TRACE</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${HANSON_LOG_HOME}/trace/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
	<appender name="HANSON_DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HANSON_LOG_HOME}/debug/${APP_NAME}.log</file>
        <!--过滤器,只打INFO级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${HANSON_LOG_HOME}/debug/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
	<appender name="HANSON_INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HANSON_LOG_HOME}/info/${APP_NAME}.log</file>
        <!--过滤器,只打INFO级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${HANSON_LOG_HOME}/info/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
    <appender name="HANSON_WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HANSON_LOG_HOME}/warn/${APP_NAME}.log</file>
        <!--过滤器,只打INFO级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${HANSON_LOG_HOME}/warn/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
    <appender name="HANSON_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HANSON_LOG_HOME}/error/${APP_NAME}.log</file>
        <!--过滤器,只打ERROR级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${HANSON_LOG_HOME}/error/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
	<!-- 
		也是<loger>元素，但是它是根loger。只有一个level属性，应为已经被命名为"root".
		level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。默认是DEBUG。
		
		<root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。
	 -->
	 <!-- 默认的日志输出级别为DEBUG，输出至控制台和文件 ，特殊定义logger如未设置相关属性也会继承root属性-->
	<logger name="com.hanson" level="INFO" additivity="false">
		<appender-ref ref="HANSON_STDOUT" />
		<appender-ref ref="HANSON_TRACE_FILE" />
		<appender-ref ref="HANSON_DEBUG_FILE" />
		<appender-ref ref="HANSON_INFO_FILE" />
		<appender-ref ref="HANSON_ERROR_FILE" />
		<appender-ref ref="HANSON_WARN_FILE" />
	</logger>
</included>